{"ast":null,"code":"export const uploadFile = async (file, url) => {\n  try {\n    const token = localStorage.getItem('access_token');\n    const response = await fetch('http://localhost:8000/api/shared-files/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        file: url,\n        file_name: file.name,\n        file_size: Math.round(file.size / 1024 / 1024) + 'MB',\n        share_type: 'private',\n        share_expiry: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),\n        file_type: file.type,\n        shared_to: []\n      })\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return {\n      error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'File upload failed'\n    };\n  }\n};\nexport const getFiles = async () => {\n  try {\n    const token = localStorage.getItem('access_token');\n    const response = await fetch('http://localhost:8000/api/shared-files/', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    console.log(error);\n    return {\n      error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Failed to get files'\n    };\n  }\n};\nexport const getFile = async fileId => {\n  try {\n    const token = localStorage.getItem('access_token');\n    const response = await fetch(`http://localhost:8000/api/shared-files/${fileId}/`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    return {\n      error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || 'Failed to get file'\n    };\n  }\n};\nexp;\nexport const deleteFile = async fileId => {\n  try {\n    const token = localStorage.getItem('access_token');\n    const response = await fetch(`http://localhost:8000/api/shared-files/${fileId}/`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    return {\n      error: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.detail) || 'Failed to delete file'\n    };\n  }\n};","map":{"version":3,"names":["uploadFile","file","url","token","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","file_name","name","file_size","Math","round","size","share_type","share_expiry","Date","now","toISOString","file_type","type","shared_to","data","json","error","_error$response","_error$response$data","detail","getFiles","_error$response2","_error$response2$data","console","log","getFile","fileId","_error$response3","_error$response3$data","exp","deleteFile","_error$response4","_error$response4$data"],"sources":["/home/fgrreloaded/FgrReloaded/Programming/Repositories/Mini_project/share-frontend/src/actions/files.js"],"sourcesContent":["export const uploadFile = async (file, url) => {\n  try {\n    const token = localStorage.getItem('access_token');\n\n    const response = await fetch('http://localhost:8000/api/shared-files/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        file: url,\n        file_name: file.name,\n        file_size: Math.round(file.size / 1024 / 1024) + 'MB',\n        share_type: 'private',\n        share_expiry: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString(),\n        file_type: file.type,\n        shared_to: []\n      })\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return { error: error.response?.data?.detail || 'File upload failed' };\n  }\n};\n\nexport const getFiles = async () => {\n  try {\n    const token = localStorage.getItem('access_token');\n    const response = await fetch('http://localhost:8000/api/shared-files/', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n    return { error: error.response?.data?.detail || 'Failed to get files' };\n  }\n}\n\nexport const getFile = async (fileId) => {\n  try {\n    const token = localStorage.getItem('access_token');\n    const response = await fetch(`http://localhost:8000/api/shared-files/${fileId}/`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return { error: error.response?.data?.detail || 'Failed to get file' };\n  }\n}\n\nexp\n\nexport const deleteFile = async (fileId) => {\n  try {\n    const token = localStorage.getItem('access_token');\n    const response = await fetch(`http://localhost:8000/api/shared-files/${fileId}/`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    return { error: error.response?.data?.detail || 'Failed to delete file' };\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}