{"ast":null,"code":"export const uploadFile = async (file, url) => {\n  try {\n    const token = localStorage.getItem('access_token');\n    const formData = new FormData();\n    formData.append('file', url);\n    formData.append('share_type', 'private');\n    formData.append('share_expiry', new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString());\n    formData.append('file_type', file.type);\n    formData.append('shared_to', JSON.stringify([]));\n    const response = await fetch('http://localhost:8000/api/shared-files/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: J\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return {\n      error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'File upload failed'\n    };\n  }\n};\nexport const getFiles = async () => {\n  try {\n    const token = localStorage.getItem('access_token');\n    const response = await fetch('http://localhost:8000/api/shared-files/', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    console.log(error);\n    return {\n      error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Failed to get files'\n    };\n  }\n};","map":{"version":3,"names":["uploadFile","file","url","token","localStorage","getItem","formData","FormData","append","Date","now","toISOString","type","JSON","stringify","response","fetch","method","headers","body","J","data","error","_error$response","_error$response$data","detail","getFiles","json","_error$response2","_error$response2$data","console","log"],"sources":["/home/fgrreloaded/FgrReloaded/Programming/Repositories/Mini_project/share-frontend/src/actions/files.js"],"sourcesContent":["export const uploadFile = async (file, url) => {\n  try {\n    const token = localStorage.getItem('access_token');\n    const formData = new FormData();\n    formData.append('file', url);\n    formData.append('share_type', 'private');\n    formData.append('share_expiry', new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString());\n    formData.append('file_type', file.type);\n    formData.append('shared_to', JSON.stringify([]));\n\n    const response = await fetch('http://localhost:8000/api/shared-files/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: J\n    });\n    return response.data;\n  } catch (error) {\n    return { error: error.response?.data?.detail || 'File upload failed' };\n  }\n};\n\nexport const getFiles = async () => {\n  try {\n    const token = localStorage.getItem('access_token');\n    const response = await fetch('http://localhost:8000/api/shared-files/', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n    return { error: error.response?.data?.detail || 'Failed to get files' };\n  }\n}"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,MAAAA,CAAOC,IAAI,EAAEC,GAAG,KAAK;EAC7C,IAAI;IACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAClD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEN,GAAG,CAAC;IAC5BI,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAE,SAAS,CAAC;IACxCF,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAE,IAAIC,IAAI,CAACA,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;IAC9FL,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEP,IAAI,CAACW,IAAI,CAAC;IACvCN,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEK,IAAI,CAACC,SAAS,CAAC,EAAE,CAAC,CAAC;IAEhD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;MACtEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUf,KAAK;MAClC,CAAC;MACDgB,IAAI,EAAEC;IACR,CAAC,CAAC;IACF,OAAOL,QAAQ,CAACM,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACd,OAAO;MAAEF,KAAK,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACP,QAAQ,cAAAQ,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBC,MAAM,KAAI;IAAqB,CAAC;EACxE;AACF,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,IAAI;IACF,MAAMvB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAClD,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;MACtEC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUf,KAAK;MAClC;IACF,CAAC,CAAC;IACF,MAAMkB,IAAI,GAAG,MAAMN,QAAQ,CAACY,IAAI,CAAC,CAAC;IAClC,OAAON,IAAI;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAM,gBAAA,EAAAC,qBAAA;IACdC,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;IAClB,OAAO;MAAEA,KAAK,EAAE,EAAAM,gBAAA,GAAAN,KAAK,CAACP,QAAQ,cAAAa,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBP,IAAI,cAAAQ,qBAAA,uBAApBA,qBAAA,CAAsBJ,MAAM,KAAI;IAAsB,CAAC;EACzE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}