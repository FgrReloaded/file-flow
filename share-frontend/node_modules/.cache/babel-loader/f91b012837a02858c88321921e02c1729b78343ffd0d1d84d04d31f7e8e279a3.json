{"ast":null,"code":"export const registerUser = async formData => {\n  try {\n    const response = await fetch('http://localhost:8000/api/register/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error('Failed to register user');\n  }\n};\nexport const loginUser = async formData => {\n  try {\n    const response = await fetch('http://localhost:8000/api/login/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error('Failed to login user');\n  }\n};\nexport const getProfile = async () => {\n  try {\n    const response = await fetch('http://localhost:8000/api/profile/', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('access_token')}`\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error('Failed to get profile');\n  }\n};","map":{"version":3,"names":["registerUser","formData","response","fetch","method","headers","body","JSON","stringify","data","json","error","Error","loginUser","getProfile","localStorage","getItem"],"sources":["/home/fgrreloaded/FgrReloaded/Programming/Repositories/Mini_project/share-frontend/src/actions/auth.js"],"sourcesContent":["export const registerUser = async (formData) => {\n  try {\n    const response = await fetch('http://localhost:8000/api/register/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error('Failed to register user');\n  }\n}\n\nexport const loginUser = async (formData) => {\n  try {\n    const response = await fetch('http://localhost:8000/api/login/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error('Failed to login user');\n  }\n}\n\nexport const getProfile = async () => {\n  try {\n    const response = await fetch('http://localhost:8000/api/profile/', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('access_token')}`\n      }\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error('Failed to get profile');\n  }\n}"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;MAClEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;IAC/B,CAAC,CAAC;IACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;AACF,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAOZ,QAAQ,IAAK;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;MAC/DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;IAC/B,CAAC,CAAC;IACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EACzC;AACF,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;MACjEC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAE,UAAUU,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MACjE;IACF,CAAC,CAAC;IACF,MAAMP,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}